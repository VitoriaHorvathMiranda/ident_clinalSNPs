lm(freq~latitude, test_snp1)
?group_by
pop_test_lite[, ,by = position2]
pop_test_lite[, .(lm(freq~latitude)) ,by = position2]
pop_test_lite[, lm(freq~latitude, by = position2]
pop_test_lite[, lm(freq~latitude), by = position2]
?kable
??kable
?glm
library(data.table)
library(tidyverse)
pop_test <- fread("/dados/time_clines/output/SNPs/joined97.tsv")
pop_test[, position2 := paste(chrom, position, sep = ":")]
pop_test <- pop_test[order(position2),]
pop_test <- pop_test[, !c("chrom", "position")]
pop_test_lite <- pop_test[0:500,]
?do
View(pop_test_lite)
pop_test_lite |> group_by(position2) |>
across(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
pop_test_lite |> group_by(position2) |>
do(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
models_lite <- pop_test_lite |> group_by(position2) |>
do(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
models_lite
models_lite$model
library(broom)
models_lite |> glance(model)
models_lite %>% glance(model)
models_lite %>% tidy(model)
models_lite
?glance
glance(models_lite$model)
models_lite$model[1]
summary(models_lite$model[1])
pop_test_lite |> group_by(position2) |>
nest()
fited_models <- pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data,glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
fited_models <- pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data, glm(freq~latitude, weights = NE,
data = data,
family = binomial())))
fited_models <- pop_test_lite |> group_by(position2) |>
nest() # |>
View(fited_models)
View(fited_models[[2]][[1]])
View(fited_models)
View(fited_models[[2]][[1]])
fited_modelslm <- pop_test_lite |> group_by(position2) |>
nest()  |>
mutate(model = map(data, lm(freq~latitude, data = .)))
pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
View(fited_models[[2]][[4]])
fited_models[[2]][[.]]
fited_models[[2]][[]]
fited_models[[2]]
glm(freq~latitude, weights = NE,
data = fited_models[[2]][[1]],
family = binomial()))
glm(freq~latitude, weights = NE,
data = fited_models[[2]][[1]],
family = binomial())
pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data, mean(freq)))
View(fited_models[[2]][[1]])
mutate(model = map(glm(freq~latitude, weights = NE,
data = fited_models$data,
family = binomial())))
mutate(model = map(fited_models$data ,glm(freq~latitude, weights = NE,
data = fited_models$data,
family = binomial())))
mutate(model = map(fited_models$data ,glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
mutate(model = map(fited_models$data,
glm(freq~latitude, weights = NE,
data = ., family = binomial())))
pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
output <- vector("list", nrow(fited_models))
seq_along(fited_models$data)
for (i in seq_along(fited_models$data)) {
output[[i]] <- glm(freq~latitude, weights = NE,
data = fited_models$data[[i]],
family = binomial())
}
output
glance(output)
glance(output[1])
output[1]
summary(output[1])
?glm
pop_test_lite |> group_by(position2) |>
nest() |>
mutate(model = map(data, glm(freq~latitude, weights = NE,
#data = .,
family = binomial())))
tidy(output)
d <- data.frame(state=rep(c('NY', 'CA'), c(10, 10)),
year=rep(1:10, 2),
response=c(rnorm(10), rnorm(10)))
fitted_models = d %>% group_by(state) %>% do(model = lm(response ~ year, data = .))
View(fitted_models)
View(fited_models)
View(models_lite)
fitted_models %>% tidy(model)
fitted_models %>% glance(model)
glimpse(fitted_models$model)
d %>% group_by(state) %>% do(model = lm(response ~ year, data = .)) %>% rowwise() %>% tidy(model)
?rowwise()
summary(fitted_models[[1]])
glmfit <- glm(am ~ wt, mtcars, family = "binomial")
glance(glmfit)
tidy(glmfit)
fitted_models[[1]]
fitted_models[[2]]
fitted_models[[2]][[1]]
summary(fitted_models[[2]][[1]])
glance(fitted_models[[2]][[1]])
tidy(fitted_models[[2]][[1]])
summary(output[[2]][[1]])
output[[2]]
models_lite[[2]]
models_lite[[2]][[1]]
summary(models_lite[[2]][[1]])
tidy(models_lite[[2]][[1]])
tidy(fited_models[[2]][[1]])
fited_models[[2]][[1]]
output[[2]][[1]]
output[[2]]
tidy(models_lite[[2]][[1]])
tidy(output[[1]])
?rowwise()
d %>% group_by(state) %>% do(model = lm(response ~ year, data = .))
d %>% group_by(state) %>% do(model = lm(response ~ year, data = .)) %>% rowwise() %>% tidy(model)
tidy(models_lite[[2]])
models_lite[[2]]
models_lite[[2]] %>% rowwise() %> %tidy()
models_lite[[2]] %>% rowwise() %>% tidy()
output[[1]]
seq_along(output)
output[[1]]
tidy(output[[1]])
length(output)
output2 <- vector("list", length(output))
for (i in seq_along(output)) {
output2[[i]] <- tidy(output[[i]])
}
View(output2)
output2
output2[[119]]
output2[[119]][[4]]
output2[[119]][[5]]
output2[[119]][[5,2]]
output2[[119]][[5,1]]
output2[[119]]
output2[[119]][[5]]
output2[[119]][[5]][2]
output3 <- vector("double", length(output2))
for (i in seq_along(output2)) {
output3[[i]] <- output2[[i]][[5]][2]
}
output3
library(data.table)
library(tidyverse)
library(broom)
pop_test <- fread("/dados/time_clines/output/SNPs/joined97.tsv")
pop_test[, position2 := paste(chrom, position, sep = ":")]
pop_test <- pop_test[order(position2),]
pop_test <- pop_test[, !c("chrom", "position")]
pop_test_lite <- pop_test[0:500,]
pop_test_lite |> group_by(position2) |>
nest() |>
map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
?map
pop_test_lite |> group_by(position2) |>
nest() |>
summarise(map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
library(lme4)
?glmer
pop_test_lite
glm(freq~latitude | position2, weights = NE,
data = pop_test_lite, family = binomial())
glmer(freq~latitude | position2, weights = NE,
data = pop_test_lite, family = binomial())
glmer(freq~latitude | position2, weights = NE,
data = pop_test_lite, family = binomial())
pop_test_lite[, summary(glm(freq~latitude, weights = NE,
family = binomial())), by = position2]
pop_test_lite[,:= summary(glm(freq~latitude, weights = NE,
family = binomial())), by = position2]
pop_test_lite[,`:=` summary(glm(freq~latitude, weights = NE,
family = binomial())), by = position2]
pop_test_lite[, := summary(glm(freq~latitude,
weights = NE,
family = binomial())),
by = position2]
pop_test_lite[, := glm(freq~latitude,
weights = NE,
family = binomial()),
by = position2]
pop_test_lite[, `:=` .(glm(freq~latitude,
weights = NE,
family = binomial())),
by = position2]
pop_test_lite[, `:=` (glm(freq~latitude,
weights = NE,
family = binomial())),
by = position2]
pop_test_lite[, `:=` (models = glm(freq~latitude,
weights = NE,
family = binomial())),
by = position2]
pop_test_lite[, .SD, by = position2]
pop_test_lite[, `:=`  glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, `:=` (models = glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, := (models = glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, .(models = glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, .(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, .(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2] |> View()
pop_test_lite[, .(lapply(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()))),
by = position2] |> View()
pop_test_lite[, .(lapply(.SD, glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()))),
by = position2] |> View()
pop_test_lite[, .(lapply(.SD, glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()))),
by = position2]
pop_test_lite[, glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()),
by = position2]
pop_test_lite[, .(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial())),
by = position2]
pop_test_lite[, .SD, by = position2]
pop_test_lite[, .SD, by = position2] |> View()
pop_test_lite[, .(summary(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()))),
by = position2]
pop_test_lite[, .(coef(glm(freq~latitude,
weights = NE,
data = .SD,
family = binomial()))),
by = position2]
library(data.table)
library(tidyverse)
library(broom)
pop_test <- fread("/dados/time_clines/output/SNPs/joined97.tsv")
pop_test[, position2 := paste(chrom, position, sep = ":")]
pop_test <- pop_test[order(position2),]
pop_test <- pop_test[, !c("chrom", "position")]
pop_test_lite <- pop_test[0:500,]
View(pop_test_lite)
pop_test_lite |> group_by(position2) |>
do(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
models_lite <- pop_test_lite |> group_by(position2) |>
do(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
models_lite |>
pluck(model)
models_lite <- pop_test_lite |> group_by(position2) |>
do(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
odels_lite
models_lite
models_lite |>
pluck(model)
pop_test_lite |> group_by(position2) |>
mutate(model = glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
models_lite$model
summary(models_lite$model[1])
summary(models_lite$model[[1]])
models_lite |> glance(model)
models_lite |>
pluck(.$model)
models_lite |>
pluck(2)
pluck_test <- models_lite |>
pluck(2)
View(pluck_test)
head(pluck_test)
summary(pluck_test)
summary(pluck_test, 3)
models_lite |>
pluck(2)
tibble(a = 1:10,
b = 10:20)
tibble(a = 1:10,
b = 11:20)
test_tbl <- tibble(a = 1:10,
b = 11:20)
lm(a ~ b, data = test_tbl)
summary(lm(a ~ b, data = test_tbl))
lm_model_test <- summary(lm(a ~ b, data = test_tbl))
lm_model_test$coefficients
lm_model_test$coefficients[[2]]
lm_model_test$coefficients[2]
lm_model_test$coefficients
lm_model_test$coefficients[, 4]
models_lite |>
pluck(2)
models_lite
pluck_test <- models_lite |>
pluck(2)
pluck_test <- models_lite |>
pluck(1:2)
pluck_test <- models_lite |>
pluck(2)
?map
View(pluck_test)
typeof(summary(models_lite$model[[1]]))
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
df
models_lite |>
pluck(2)
models_lite |>
pluck(2) |> as_tibble()
models_lite |>
pluck(2) |>
map(., summary)
models_lite |>
pluck(2) |>
map(summary)
fited_models <- pop_test_lite |> group_by(position2) |>
nest() |>
map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
####
pop_test_lite
pop_test_lite |> group_by(position2) |>
nest()
pop_test_lite |> group_by(position2) |>
nest() |>
map(data, glm(freq~latitude, weights = NE,
data = .,
family = binomial()))
pop_test_lite
pop_test_lite |> group_by(position2) |>
nest()
pop_test_lite
pop_test_lite |>
group_by(position2)
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(., glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map($., glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(x$., glm(freq~latitude, weights = NE,
data = .,
family = binomial())))
?formula
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(x,
glm,
freq~latitude,
weights = NE,
data = .,
family = binomial()))
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(model,
glm,
freq~latitude,
weights = NE,
data = .,
family = binomial()))
pop_test_lite |>
group_by(position2)
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(.,
glm,
freq~latitude,
weights = NE,
data = .,
family = binomial()))
?glm
fited_models <- pop_test_lite |> group_by(position2) |>
nest() |>
map(data, glm, formula = freq~latitude,
weights = NE,
data = .,
family = binomial())
fited_models
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(.,
glm,
freq~latitude,
weights = NE,
family = binomial()))
####
pop_test_lite |>
group_by(position2) |>
mutate(test = map(
glm,
freq~latitude,
weights = NE,
data = .,
family = binomial()))
####
pop_test_lite |>
group_by(position2) |>
mutate(test =
pluck(2) |>
map(.,
glm,
freq~latitude,
weights = NE,
data = .,
family = binomial()))
pop_test_lite |>
group_by(position2)
pluck_test <- models_lite |>
pluck(2) |>
map(summary)
pluck_test
models_lite
models_lite |>
map_dfc(pluck(2) |> summary)
models_lite %>%
map_dfc(pluck(2) %>% summary)
models_lite
models_lite |>
map_dfc(.$model, summary)
